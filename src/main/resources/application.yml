server:
  port: 8090
spring:
  output:
    ansi:
      enabled: ALWAYS
  jackson:
    serialization:
      fail-on-empty-beans: false
  threads:
    virtual:
      enabled: true
  kafka:
    bootstrap-servers: 43.201.55.18:19092,10.0.1.162:19092
    consumer:
      group-id: image-embedding-processor
      auto-offset-reset: earliest
    producer:
      retries: 3
    listener:
      concurrency: 3
  profiles:
    active: dev
    include: secret

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      - org.springframework.boot.autoconfigure.session.SessionAutoConfiguration
  datasource:
    username: root
    password: 1234
    driver-class-name: org.h2.Driver

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        default_batch_fetch_size: 100
#        show_sql: true
#        format_sql: true
#        highlight_sql: true
#        use_sql_comments: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            scope: account_email
            authorization-grant-type: authorization_code
            client-name: Kakao    # 클라이언트 이름
          google:
            scope:
              - email
#              - profile
          naver:
            scope:
#              - nickname
              - email
#              - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  mail:
    host: smtp.naver.com
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true   # TLS로 암호화
          connectiontimeout: 5000   # 5초
          timeout: 5000
          writetimeout: 5000
      auth-code-expiration-millis: 1800000   #  인증 코드 만료 시간 (30분)


logging:
  level:
    com.patrol: DEBUG
    org.hibernate.SQL: ERROR
    org.apache.kafka.clients: ERROR
    kafka: ERROR

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
ai:
  service-url: http://223.130.161.144:8000

app:
  upload:
    dir: ./uploads  # 업로드 디렉토리 경로 설정
  similarity:
    threshold: 0.85
aws:
  disableIdleConnectionReaper: true

#    org.hibernate.orm.jdbc.bind: TRACE
#    org.hibernate.orm.jdbc.extract: TRACE
#    org.springframework.transaction.interceptor: TRACE
